# SSL | Old configuration NGINX 1.17.7 | OpenSSL 1.1.1d Supports Firefox 1,
# Android 2.3, Chrome 1, Edge 12, IE8 on Windows XP, Java 6, OpenSSL 0.9.8,
# Opera 5, and Safari 1 
#
# Based on Mozilla SSL Configuration Generator See
# https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=nginx-1.14.0&openssl=1.0.1e&hsts=yes&profile=old

# TODO START ---
    # Define your certificate/keys here (uncomment lines below and remove
    # directives from server context) ssl_certificate
    # /path/to/signed_cert_plus_intermediates; ssl_certificate_key
    # /path/to/private_key;
    
    # Verify chain of trust of OCSP response using Root CA and Intermediate
    # certs ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    # Make sure resolver is set in this server block replace with the IP address
    # of your resolver 
    # resolver <IP DNS resolver> valid=300s; 
    # e.g. resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001]; # Cloudflare
    # resolver_timeout 5s;
# TODO END---

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, older support can use 1024
    # bits openssl dhparam -out /etc/ssl/dhparam/1024/dhparam.pem
    ssl_dhparam /etc/ssl/dhparam/1024/dhparam.pem; 

    # old configuration
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA;
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds = 24months)
    add_header Strict-Transport-Security "max-age=63072000" always

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

}